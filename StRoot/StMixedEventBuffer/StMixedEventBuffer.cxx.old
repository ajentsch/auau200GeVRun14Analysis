#include <limits>

#include "TTree.h"
#include "TH2F.h"

#include "StMixedEventBuffer.h"
#include "StPicoDstMaker/StPicoEvent.h"
#include "StPicoDstMaker/StPicoTrack.h"
#include "StPicoDstMaker/StPicoDst.h"

#include "StPicoMixedEventMaker.h"
#include "StMixerEvent.h"



StMixedEventBuffer::StMixedEventBuffer(){

    //setBufferSize();  --- This will set how many events per category to save --- still to do
    
}


StMixedEventBuffer::~StMixedEventBuffer(){

    //return kStOk;
    
}


bool StMixedEventBuffer::addEvent(StPicoDst const* const picoDst){        //Need to track cut information -- pass this information from AnaMaker -- perhaps pass this info in an array of cuts

    int nTracks = picoDst->numberOfTracks();
    StThreeVectorF pVertex = picoDst->event()->primaryVertex();
    StMixerEvent* event = new StMixerEvent(pVertex, picoDst->event()->bField());
    
    
    for( int iTrk = 0; iTrk < nTracks; ++iTrk) {
        StPicoTrack const* trk = picoDst->track(iTrk);
	    bool saveTrack = true;                                     //Need to add a conditional here to throw out tracks without necessary cuts
     
        if(saveTrack == true){
            StMixerTrack mTrack(pVertex, picoDst->event()->bField(), *trk);
            event->addTrack(mTrack);
        }

    }
    
    if(mBufferCounter < mBufferSize){
        mEventsList.push_back(event);
        mBufferCounter++;
    } 
     
    return kStOk;
    
}